{
  "formatVersion": 1,
  "database": {
    "version": 2,
    "identityHash": "15c09739506e99a1d482971fcd6d5e93",
    "entities": [
      {
        "tableName": "SettingInformation",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `password` TEXT NOT NULL, `isUsingBiometric` INTEGER NOT NULL, `allowScreenShot` INTEGER NOT NULL, `directShowPassword` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isUsingBiometric",
            "columnName": "isUsingBiometric",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allowScreenShot",
            "columnName": "allowScreenShot",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "directShowPassword",
            "columnName": "directShowPassword",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PasswordGroup",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `groupName` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupName",
            "columnName": "groupName",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PasswordData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `title` TEXT NOT NULL, `user` TEXT NOT NULL, `password` TEXT NOT NULL, `remark` TEXT NOT NULL, `viewTimes` INTEGER NOT NULL, `groupID` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "user",
            "columnName": "user",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "remark",
            "columnName": "remark",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "viewTimes",
            "columnName": "viewTimes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupID",
            "columnName": "groupID",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '15c09739506e99a1d482971fcd6d5e93')"
    ]
  }
}